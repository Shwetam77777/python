from work import *
import math
class mywork:
    def isprime(a):
        b = a // 2
        for i in range(2, b + 1):
            if a % i == 0:
                return False
            return True

    def ispronic(a):
        b = a // 2
        for i in range(b + 1):
            if a * (i + 1) == a:
                return False
            return True

    def cube(a):
        return a ** 3

    def square(a):
        return a ** 2

    def isArmstrong(num):
        t, s = num, 0
        while t != 0:
            r = t % 10
            s = s + cube(r)
            t = t // 10
        if num == s:
            return True
        return False

    def ispositive(a):
        if a >= 0:
            return True
        else:
            return False

    def ispalindrome(n):
        temp = n
        rev = 0
        while (n > 0):
            dig = n % 10
            rev = rev * 10 + dig
            n = n // 10
        if (temp == rev):
            return True
        else:
            return False

    def isfactorial(n):
        num = 0
        for i in range(1, n):
            num = num * i
        return num

    def isspecial(n):
        t, s = n, 0
        while t != 0:
            r = t % 10
            s = s + isfactorial(r)
            t = t // 10
        if n == s:
            return True
        return False

    def isfactor(n):
        for i in range(1, n):
            n % i == 0
            return i

    def isniven(n):
        t, s = n, 0
        while t != 0:
            r = t % 10
            s = s + r
            t = t // 10
        if n % s == 0:
            return True
        return False

    def isneon(n):
        s = 0
        squ = square(n)
        while squ > 0:
            r = squ % 10
            s = s + r
            squ = squ // 10
        if n == s:
            return True
        return False

    def ismagic(n):
        t, s = n, 0
        while t != 0:
            r = t % 10
            s = s + r
            t = t // 10
        if n == s:
            return True
        return False

    def isevil(n):
        t, s = n, 0
        while t != 0:
            r = t % 10
            print(r)
            s = s + r
            t = t // 2
        if s % 2 == 0:
            return True
        return False

    def power(a, n):
        for i in range(1, n, -1):
            return (a ** len(n))

    def isdisarium(num):
        t, s = num, 0
        while t != 0:
            r = t % 10
            s = s + pow(r, t)
            t = t // 10
            if num == s:
                return True
            return False

    def isperfect(n):
        b = 0
        for i in range(1, n):
            if n % i == 0:
                b = i + b
            return b
        if b == n:
            return True
        else:
            return False


class my_string_fun:

    def isspace(string):
        c = 0
        for i in string:
            if i == ' ':
                c = c + 1
        if c > 0:
            print("space found{}times".format(c))
        else:
            print(" no space")

    def ispositive_str(string):
        a = string
        for i in range(len(a) - 1):
            if a[i] > a[i + 1]:
                return False
            else:
                return True

    def palindrome(string):
        lst = string
        s = 0
        e = len(lst) - 1
        while s < e:
            if lst[s] == lst[e]:
                s = s + 1
                e = e - 1
            else:
                return False
        return True

    def islowercase(string):
        lst = string
        b = lst
        for i in range(0, len(lst)):
            if lst[i] >= 'a' and lst[i] < 'z':
                b = ord(lst[i])
                b = b + 32
        print(b)

    def isuppercase(string):
        lst = string
        a = lst
        for i in range(0, len(lst)):
            if lst[i] >= 'A' and lst[i] < 'Z':
                a = ord(lst[i])
                a = a - 32
        print(a)

    def isswap(string):
        lst = string
        b = 0
        for i in range(0, len(lst)):
            if lst[i] >= 'a' and lst[i] < 'z':
                b = b + 32
            elif lst[i] >= 'A' and lst[i] < 'Z':
                b = b - 32
        print(b)

    # error titlecase
    def istitle(string):
        p = 0
        c = string
        a = ord(c[0])
        a = a - 32
        for i in string:
            if i == ' ':
                p = p + 1
                a = a - 32
            if p > 0:
                print("space found{}times".format(p))
        print(a)

    def isextract(string):
        lst = string
        for i in range(len(lst) - 1):
            print(lst[2:5])

    # error in find
    def isfind(string1, string2):
        global c
        lst1 = string1
        lst2 = string2
        for i in range(len(lst1)):
            c, k = 0, i
            for j in range(len(lst2)):
                if lst2[j] != lst1[k]:
                    break
                c = c + 1
                k = k + 1
        if len(lst2) == c:
            return True
        return False

    def isreplace(string):
        lst = string
        a = 'a'
        b = 'i'
        for i in range(len(lst)):
            if lst[i] == a:
                lst[i] = b
        return lst

    def iscompare(string1, string2):
        if (string1 == string2[:]):
            return True
        else:
            return False









